0x68 8-byte structures at $819075 - $8193B4 (0x340 bytes):

Format: 00 01 02 03 04 05 06 07
Byte 00: identifier for what graphic/tilemap to decompress
Byte 01: flag for whether or not to copy the decompressed data into the pointer
         at bytes 02-04. If byte 01 is 00, then no for copy; otherwise yes.
Byte 05: flag for whether or not to DMA the compressed data from $7F0000 into
         the VRAM address specified in bytes 06-07. Same rule as byte 01.

0x00: 00 01 00 B5 7E -- 00 00   |   0x34: 31 00 -- -- -- 01 00 30
0x01: 01 01 00 20 7E 01 00 60   |   0x35: 32 00 -- -- -- 01 00 5C
0x02: 02 01 00 8B 7E -- 00 00   |   0x36: 33 00 -- -- -- 01 00 5C
0x03: 03 00 -- -- -- 01 00 18   |   0x37: 34 00 -- -- -- 01 00 5C
0x04: 04 00 -- -- -- 01 00 70   |   0x38: 35 00 -- -- -- 01 00 5C
0x05: 05 01 00 20 7E 01 00 60   |   0x39: 36 00 -- -- -- 01 00 5C
0x06: 06 00 -- -- -- 01 00 00   |   0x3A: 37 00 -- -- -- 01 00 5C
0x07: 07 00 -- -- -- 01 00 00   |   0x3B: 38 00 -- -- -- 01 00 00
0x08: 08 00 -- -- -- 01 00 00   |   0x3C: 39 01 00 20 7E 01 00 50
0x09: 09 00 -- -- -- 01 00 00   |   0x3D: 3A 00 -- -- -- 01 00 20
0x0A: 0A 01 00 20 7E 01 00 50   |   0x3E: 3B 00 -- -- -- 01 00 54
0x0B: 0B 01 00 20 7E 01 00 50   |   0x3F: 2F 00 -- -- -- 01 00 60
0x0C: 0C 01 00 20 7E 01 00 50   |   0x40: 3C 00 -- -- -- 01 00 00
0x0D: 0D 01 00 20 7E 01 00 50   |   0x41: 3D 00 -- -- -- 01 00 50
0x0E: 0E 00 -- -- -- 01 00 18   |   0x42: 3E 00 -- -- -- 01 00 30
0x0F: 0F 00 -- -- -- 01 00 74   |   0x43: 3F 00 -- -- -- 01 00 00
0x10: 10 00 -- -- -- 01 00 30   |   0x44: 40 01 00 20 7E 01 00 50
0x11: 11 01 00 38 7E -- 00 64   |   0x45: 41 00 -- -- -- 01 00 60
0x12: 12 01 00 48 7E -- 00 64   |   0x46: 42 00 -- -- -- 01 00 00
0x13: 13 00 -- -- -- 01 00 40   |   0x47: 43 01 00 20 7E 01 00 50
0x14: 10 00 -- -- -- 01 00 20   |   0x48: 44 00 -- -- -- 01 00 00
0x15: 11 01 00 38 7E -- 00 54   |   0x49: 45 01 00 20 7E 01 00 50
0x16: 12 01 00 48 7E -- 00 54   |   0x4A: 46 00 -- -- -- 01 00 20
0x17: 13 00 -- -- -- 01 00 30   |   0x4B: 47 00 -- -- -- 01 00 54
0x18: 14 00 -- -- -- 01 00 7E   |   0x4C: 48 00 -- -- -- 01 00 60
0x19: 15 00 -- -- -- 01 00 10   |   0x4D: 49 00 -- -- -- 01 00 00
0x1A: 16 00 -- -- -- 01 00 10   |   0x4E: 4A 01 00 20 7E 01 00 50
0x1B: 17 00 -- -- -- 01 00 10   |   0x4F: 4C 00 -- -- -- 01 00 20
0x1C: 18 00 -- -- -- 01 00 10   |   0x50: 4D 00 -- -- -- 01 00 54
0x1D: 19 01 00 38 7E 01 00 54   |   0x51: 4E 00 -- -- -- 01 40 2B
0x1E: 1A 01 00 38 7E 01 00 54   |   0x52: 1D 00 -- -- -- 01 00 30
0x1F: 1B 01 00 38 7E 01 00 54   |   0x53: 1E 01 00 28 7E 01 00 64
0x20: 1C 01 00 38 7E 01 00 54   |   0x54: 4F 00 -- -- -- 01 70 7B
0x21: 1D 00 -- -- -- 01 00 20   |   0x55: 50 00 -- -- -- 01 00 60
0x22: 1E 01 00 28 7E 01 00 54   |   0x56: 51 00 -- -- -- 01 00 00
0x23: 1F 00 -- -- -- 01 00 00   |   0x57: 52 00 -- -- -- 01 00 00
0x24: 20 01 00 20 7E 01 00 50   |   0x58: 53 00 -- -- -- 01 00 50
0x25: 21 00 -- -- -- 01 00 60   |   0x59: 54 00 -- -- -- 01 00 00
0x26: 22 00 -- -- -- 01 00 10   |   0x5A: 55 01 00 28 7E -- 00 00
0x27: 23 00 -- -- -- 01 00 10   |   0x5B: 56 01 00 30 7E -- 00 00
0x28: 24 00 -- -- -- 01 00 10   |   0x5C: 57 00 -- -- -- 01 00 10
0x29: 25 00 -- -- -- 01 00 10   |   0x5D: 58 00 -- -- -- 01 00 54
0x2A: 26 00 -- -- -- 01 00 10   |   0x5E: 59 00 -- -- -- 01 00 00
0x2B: 27 00 -- -- -- 01 00 10   |   0x5F: 5A 00 -- -- -- 01 00 50
0x2C: 28 00 -- -- -- 01 00 00   |   0x60: 5B 00 -- -- -- 01 00 74
0x2D: 29 00 -- -- -- 01 00 00   |   0x61: 5C 00 -- -- -- 01 40 28
0x2E: 2A 00 -- -- -- 01 00 00   |   0x62: 5D 00 -- -- -- 01 40 28
0x2F: 2B 00 -- -- -- 01 00 00   |   0x63: 5E 00 -- -- -- 01 40 28
0x30: 2C 00 -- -- -- 01 00 00   |   0x64: 5F 00 -- -- -- 01 40 28
0x31: 2D 00 -- -- -- 01 00 00   |   0x65: 60 00 -- -- -- 01 00 00
0x32: 2E 00 -- -- -- 01 00 40   |   0x66: 61 00 -- -- -- 01 00 50
0x33: 30 00 -- -- -- 01 00 38   |   0x67: 62 00 -- -- -- 01 00 78

--------------------------------------------------------------------------------

0x63 24-bit pointers stuffed into 4 byte blocks at $888000 (4th byte always 00).
Perhaps note that these pointers go from 0x40000 - 0x4018B, and the first entry
is $88818C (0x4018C). Total data size is 0x18C. 

         00     01     02     03     04     05     06     07
00-07: 88818C 8891DF 8896FB 889A05 88A719 88ABA8 88B079 88CCB6
08-0F: 88E822 88FF33 898E3F 899140 89943D 8998A0 899C7E 89AB34
10-17: 89B19F 89BB1F 89BE1B 89C099 89DAA4 89DD97 89F887 8A9416
18-1F: 8AA2AF 8ABA90 8ABDD9 8AC1A7 8AC51F 8AC8A1 8AD025 8AD294
20-27: 8AE682 8AE937 8B87FE 8B8FD9 8B99A7 8BA621 8BAFE0 8BB80B
28-2F: 8BBF89 8BD2C7 8BE8E5 8BF68B 8C8CA1 8C9F2C 8CB130 8CD284
30-37: 8CE130 8CE32A 8CE61A 8CE853 8CEB04 8CEE2D 8CF07C 8CF300
38-3F: 8CF659 8CFC1C 8CFDC8 8D8231 8D83B4 8D880A 8D8A40 8D9FD4
40-47: 8DA541 8DA6E7 8DA907 8DB194 8DB39F 8DC451 8DC55A 8DCE70
48-4F: 8DD0B7 8DF9EE 8E8D73 8E8F04 8E9097 8E97BF 8E9A06 8E9DCB
50-57: 8E9E34 8EA1C8 8EBD96 8ECC56 8ECF2E 8ED45D 8ED59C 8ED6DB
58-5F: 8F8328 8F89A3 8FB907 8FC061 8FC345 8FC696 8FC9D0 8FCCFD
60-62: 8FD034 8FD47F 8FD640

Quick note: the last graphics ID is for data from 8FD640-8FDAE9.
